stages:
  - build
  - deploy

###
# Build
###
build_php:
  stage: build
  image: drosalys/php-engine:8.0
  script:
    - composer selfupdate --2
    - composer config github-oauth.github.com $GITHUB_TOKEN
    - export APP_ENV=prod
    - composer install --no-dev -a -n
    - rm -Rf var/cache/{dev,prod,test}
    - rm -Rf var/log/{dev,prod,test}.log
  artifacts:
    name: 'CHECK_BUILD_PHP_${CI_COMMIT_SHORT_SHA}'
    paths:
      - vendor/
      - public/bundles/
    expire_in: 1 week
  cache:
    key: 'VENDOR_${CI_COMMIT_REF_NAME}'
    policy: pull-push
    paths:
      - vendor/
  only:
    - merge_requests
    - /^v[0-9]+(\.[0-9]+){2}$/

build_php_dev:
  stage: build
  image: drosalys/php-engine:8.0
  script:
    - composer selfupdate --2
    - composer config github-oauth.github.com $GITHUB_TOKEN
    - composer install -n
    - rm -Rf var/cache/{dev,prod,test}
    - rm -Rf var/log/{dev,prod,test}.log
  artifacts:
    name: 'CHECK_BUILD_PHP_${CI_COMMIT_SHORT_SHA}'
    paths:
      - vendor/
      - public/bundles/
    expire_in: 1 week
  cache:
    key: 'VENDOR_${CI_COMMIT_REF_NAME}'
    policy: pull-push
    paths:
      - vendor/
  only:
    - /^v[0-9]+(\.[0-9]+){2}$/

build_assets:
  stage: build
  image: node:16
  before_script:
    - yarn config set network-timeout 600000 -g
  script:
    - yarn install
    - yarn build
  artifacts:
    name: 'CHECK_BUILD_ASSETS_${CI_COMMIT_SHORT_SHA}'
    paths:
      - ./public/build
      - ./public/bundles
    expire_in: 1 week
  cache:
    key: 'NODE_${CI_COMMIT_REF_NAME}'
    policy: pull-push
    paths:
      - node_modules/
  only:
    - merge_requests
    - /^v[0-9]+(\.[0-9]+){2}$/

###
# Deploy
###
.deploy:
  stage: deploy
  image: liaohuqiu/rsync
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$PROD_SSH_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - find . -type d -exec chmod 755 {} \;
    - find . -type f -exec chmod 644 {} \;
    - chmod ug+x *.sh
    - rsync -az -e "ssh -p $PROD_SSH_PORT" --delete --filter='protect var/*' --filter='protect public/photos/*' --exclude=.git --exclude=.env.local --exclude=.env.*.local . $PROD_URI:$PROD_DIR
    - sshpass -p $PROD_PASSPHRASE ssh $PROD_URI -p $PROD_SSH_PORT "$PROD_DIR/deploy.sh"

deploy_prod:
  when: manual
  extends: .deploy
  variables:
    DEPLOY_ENV: PROD
  dependencies:
    - build_php
    - build_assets
  only:
    - /^v[0-9]+(\.[0-9]+){2}$/
